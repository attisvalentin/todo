openapi: '3.0.2'
info:
  title: ToDo API
  version: '1.0'
servers:
  - url: https://localhost:8000/api
    description: Local server
paths:
  /items:
    summary: /items | /items?name=lorem OR /items?completed=1&name=lorem OR /items?completed=0 | /items?per_page=10&page=1
    get:
      responses:
        '200':
          description: Returns a list of ToDo items. Can be filtered by status and name also. Or paginated.
          content:
            application/json:
              schema:
                type: array
              example:
                - id: 1
                  name: 'A task'
                  description: 'Finish the task'
                  status: 0
                  created_at: '2020-01-01 00:00:00'
                  updated_at: '2020-01-01 00:00:00'
        '404':
          description: Items not found.
        '500':
          description: error message, generated by the server.
    post:
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: 'A task'
                description:
                  type: string
                  example: 'Finish the task'
      responses:
        '201':
          description: Returns the created ToDo item.
          content:
            application/json:
              schema:
                type: array
              example:
                - id: 1
                  name: 'A task'
                  description: 'Finish the task'
                  status: 0
                  created_at: '2020-01-01 00:00:00'
                  updated_at: '2020-01-01 00:00:00'
        '403':
          description: Validation error.
        '500':
          description: error message, generated by the server.
  /items/{id}:
    get:
      responses:
        '200':
          description: Returns a ToDo item by id.
          content:
            application/json:
              schema:
                type: array
              example:
                - id: 1
                  name: 'A task'
                  description: 'Finish the task'
                  status: 0
                  created_at: '2020-01-01 00:00:00'
                  updated_at: '2020-01-01 00:00:00'
        '404':
          description: Item not found.
        '500':
          description: error message, generated by the server.
    put:
      summary: same as patch
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: 'A task'
                description:
                  type: string
                  example: 'Finish the task'
                status:
                  type: integer
                  example: 0
      responses:
        '200':
          description: Returns the updated ToDo item.
          content:
            application/json:
              schema:
                type: array
              example:
                - id: 1
                  name: 'A task'
                  description: 'Finish the task'
                  status: 0
                  created_at: '2020-01-01 00:00:00'
                  updated_at: '2020-01-01 00:00:00'
        '403':
          description: Validation error.
        '404':
          description: Item not found.
        '500':
          description: error message, generated by the server.
    delete:
      responses:
        '200':
          description: Returns a success message.
          content:
            application/json:
              schema:
                type: array
              example:
                - message: 'Item deleted'
        '404':
          description: Item not found.
        '500':
          description: error message, generated by the server.
